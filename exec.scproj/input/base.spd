
 
module package
	linkage: cpp_part Pack
	|memory|		globals
	|config|		funcs
	|config|		linkage
	|config|		ProjClasses
	|config|		strings
	
	
	function LibFuncLayout (|&&&nil| funcs, |string|)
		cpp_wrapper JB_App__LibFuncs


	function LibClassLayout (|string|)
		cpp_wrapper JB_App__LibClasses


	function message.Arg (|string| name, |bool| Err=false, |message|)
		opt norefcounts
		|| Ch = self[name]
			return ch
		if !err
			return message()
		.AccessErr(@tmp, name)
	
	
	function GetStructure (|bool|)
		opt norefcounts
		|| pk			= .InputPack
		|| app			= pk.arg("app", true)

		debugger.root	= pk.arg("debug")
		debugger.meta	= pk.arg("meta")
		
		.strings		= app.arg("strs")
		.projclasses	= app.arg("clss")
		.funcs			= app.arg("fncs", true)
		.linkage		= app.arg("link", true)

		|| g = app.int						#check "No globals requested."
		(g <= 256MB)						#check "Over 256MB of globals requested."
		.glob(g)
		return stderr.ok
		

	function InputPack (|messageroot|)
		opt norefcounts
		|| x = app.args[0]
		x := "~/Speedie/exec.scproj/demo.xpd"
		|| fl = x.FileThatExists("load executable")
			return fl.parse[@tmp, "pack"]
