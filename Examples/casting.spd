#!/usr/local/bin/speedie


main
	"Type-casting example!"
	|| s = "hello(world)".parse
	|| losing_type = s|object| // losing type-info is ok
	if s isa Message
		"Approach 1: '$s' was tested using 'isa'"
	if s.mustbe(message, s)
		"Approach 2: '$s' was tested using 'mustbe'. Creates errors if s is not a message"
	|| msg = s as Message
		"Approach 3: '$s' was tested using 'as'"
	
	target !ForBatchTest {
	
	|| ThisLineCompilesOK = 1
	|| blindly = losing_type|message| // comment this out, to get the code working! :)

	}
	testCasting()
	

class Vehicle
    |String| name
 

class Car (Vehicle)
    |string| brand
    constructor (|String| name, |String| brand)
		super.constructor(name)
        .brand = brand

function TestCasting
	|Vehicle| myVehicle = Car("My Car", "Tesla")
	|| myCar = myVehicle as Car
	    "My car's brand is ${myCar.brand}"
	  else
	    "myVehicle is not a Car"
