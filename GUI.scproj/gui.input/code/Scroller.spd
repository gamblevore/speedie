


module Scroller
	|int|								InDrag = -1
	|bool|								JustClicked
	
	constants
		asda = 45
	
	function timer (|uint|)
		return date.ticks
	
	function DrawScroll (|guicontrol| self, |image| where, |vec3| slh, |&uint| timer)
		opt NoRefCounts
		|| t = (*timer)
		|| t0 = t
		|| mb	= sdlapp.MouseButtons
		require (t > 1) or (!mb and .InScrollArea(.mousexy))
		if !.MouseNotDownOverOther
			*timer = 0
			return
		
		|| now = scroller.timer
		if (t == 0) or .InScrollArea(.mousexy) or (mb)
			*timer = now
			t = now
		|| R	= .scrollrect(slh)
		|| d	= (asda - (now - t)) max 0
		|| s	= 1.0
		|| range = 30.0
		if d <= range
			s = d / range
			if d
				sdlapp.touch
			  else
				*timer = 0
		
		where.drawrect(R, ListView.gscroll, s)


	function EndDrag (|&uint| timer)
		if .InDrag >= 0 
			.InDrag = -1


function ListView.SLH (|vec3|)
	|| D = .distto(._Scroll)
	|| r = 1 + d.x - .visiblerows
	return (d.y,  (r max 0),  .rowheight).vec3


function textview.SLH (|vec3|)
	opt norefcounts
	// whats the total number of lines? sigh... seems like we always need the entire thing?
	|| n = .lines.last.vline - (.maxvisiblelines - 2)
	|| s = .StartLine
	return (s.vline?,  n max 1,  .lineheight).vec3



extend guicontrol {
function ScrollRectFind (|vec3| slh, |int| shift, |int|)
	return .scrollrect(slh, shift).x


function ScrollRect (|vec3|slh, |ivec4|)
	return .scrollrect(slh, 0).ivec4


function InScrollArea (|ivec2| p, |bool|)
	|| x  = .lastrect.x2
	|| xr = (x-10, x)
	return (xr contains p.x) and (self contains p)


function MouseMovedScroll (|ivec2| p, |&uint| timer, |bool|)
	if .HasFocus or *timer
		if .InScrollArea(p)
			*timer = scroller.asda + date.ticks
			sdlapp.touch
			return true


function ScrollBarMove (|vec3| slh, |int| shift)
	if shift
		|| t = .ScrollRectFind(slh, shift)
		if self isa ListView
			.ScrollMoveTo(t)
		  elseif self isa textview
			.StartLine = t


function ClickedScrollbar (|ivec2| P,  |int| Clicks,  |vec3| slh,  |&uint| Timer,  |bool|)
	|| t = *Timer
	if !t
		return false
	|| r = .ScrollRect(slh)				// need to figure out where in P it is...
	|| y = (p.y - r.y)

	if clicks == -1 // dragged
		require (scroller.InDrag >= 0) 
		.ScrollbarMove(slh, y - scroller.InDrag)
	  elseif r contains p
		Scroller.JustClicked = true
		scroller.InDrag = y
	  else
		scroller.indrag = -1
		return false
	*Timer = scroller.asda + date.ticks
	return true


function ScrollRect (|vec3| slh, |int| shift, |vec4|)
	cpp_part ScrollRectSub
	|| s  = slh[0]
	|| l  = slh[1]
	|| rh = slh[2]
	|| f  = 1.0 - (s / l)
	|| d  = 10
	if l > 0
		|float| h = .height
		|| div = l * rh
		div = div max h
		|| porp = (h * h) / (div*4)
		d = (20 + porp) min (h * 0.375)

	|| si = .lastrect + (0,d,0,-1-d)
	|| w = 10
	|int| p = mix(si.y1, si.y2, f)
	|| y = p - d
	
	if shift
		y += shift
		p = y + d
		f = unmix(si.y1, si.y2, p)
		s = (1.0-f) * l
		return (s, s, s, s)
	
	return (si.x2 - w,  y,  si.x2,  p + d+1).vec4
}

