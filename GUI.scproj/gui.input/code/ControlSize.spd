


struct ControlSize
	linkage
		cpp_part csiz
		datatype true
	|controlrect|				GSize
	
	setter g (|int| i, |ControlPoint|)
		if .gsize[i] != value
			.GSize[i] = value
			sdlapp.resized
	
	function setsize (|controlrect| GSize) // only one we need, right?
		ifn .gsize equals gsize
			.GSize = gsize
			sdlapp.resized
	
	function ivec4.operatorequals (|ivec4| v, |bool|) // sigh
		for i in 4
			require self[i] == v[i]
		return true

	syntax access (|int| i, |ControlPoint|)
		return .GSize[i]
		
	setter TrySetLength (|int| i, |int|)
		if .mode(i) == ControlPoint.Length
			.g(i) = (value)~long
				
	function Mode (|int|i, |int|)
		return .GSize[i]&15

	function Size (|int|i, |int|)
		return .GSize[i]>>4

	helper sett (|int|i, |ivec2| value, |int| mode) // remove?
		.g(i)   = (value.x << 4) (|) mode
		.g(i+1) = (value.y << 4) (|) mode

	setter guicontrol.FullScreen (|ivec2|) // for full-screen windows
		.lastrect = (0,0,value)
		.sizer.sett(0, (0,0), ControlPoint.low)
		.sizer.sett(2, value, ControlPoint.length)


	function Calculate (|ivec4| Parent, |ivec4| Prev, |ivec4| Window, |int| ExtentMode, |ivec4|)
		|| pc = parent.size >> 1
		for i in 4
			|| m = .mode(i)
			if m <= ControlPoint.Centered
				|int| d = (m&2) + (i&1)
				if m ==	ControlPoint.Low or ControlPoint.High
					d = parent[d]
				  elseif m == ControlPoint.Before or ControlPoint.After
					d = Prev[d]
				  elseif m == controlpoint.Centered
					d = pc[i&1]
				rz[i] = d + .Size(i)
			  elseif m == controlpoint.Percent
				rz[i] = pc[i&1]|float| * (1.0/64K) * .size(i)

		for i in 4
			if .mode(i) == ControlPoint.Length
				rz[i] = rz[i xor 2] + ((i>=2) sign .size(i))
		
		if ExtentMode & ControlPoint.SlideBackInParent
			rz = rz.Bound(parent)
		
		if ExtentMode & ControlPoint.SlideBackInWindow
			rz = rz.Bound(window)
			rz = rz.boundclip(window) // in case parent goes outside window
		
