

struct InlineEditor
	linkage
		cpp_part inl
	|ListViewCell|		Cell
	|Textview|			Editor
	|Guicontrol|		EditingFor
	|bool|				NeedsHide
	
	function DrawInline (|image|where)
		opt norefcounts
		|| g = .editor
		if g is visible
			g.drawfocus(where)
	  
	
	function init (|Window| w)
		.editor = textview(w)
		with .editor
			.id				= "inline_editor"
			.visible		= false
			.SingleLine		= true
			(self.editor is editable)
			.gnormal.bg		<~ (0, 0, 0, 255)
	
	
	function NextSearch
		|| L = .EditingFor
		if L
			ifn L.__Search__(sdlapp.LastSearch, false)
				beep
			  else
				sdlapp.touch(self.editor)

	
	function AcceptSearch (|string|s)
		sdlapp.LastSearch = s
		.NextSearch
	
	
	function Accept (|string| s, |bool| hide)
		if .editingfor isa textview
			.AcceptSearch(s)
			if hide
				.clear
		  elseif .editingfor isa listview
			.finishandclear
	
	
	function UpdateSearch (|string| s)
		|| l = .editingfor
		if l isa listview
			sdlapp.LastSearch = s
			l.__Search__(s, true)
	
	
	function FinishAndClear (|bool|focus=true)
		opt norefcounts
		|| s = .editor.text
		if s != .cell
			|| l = .editingfor
			if l isa listview
				l.TryRenameCellTo(.cell, s)
		.Clear(focus)
	
	
	function Hide
		.NeedsHide = true
		
	
	function Clear (|bool| Focus=true)
		.NeedsHide = false
		.cell = nil
		|| s = .EditingFor 
		if s isa listview
			sdlapp.LastSearch = .editor.text
			if focus
				s.setfocus
		with .editor
			.visible = false
			.text = ""      // wants new
		if s isa listview
			s.IsEditing = false
			if focus
				s.setfocus
		.EditingFor = nil
	
	
	function Edit (|ListViewCell| r, |ListView| l, |bool|)
		opt norefcounts
		sdlapp.touch(.editor)
		if !l
			|| l2 = .editingfor
			if l2 isa listview
				l = l2
			
		debug_require l and r
		|| row = r.row
		require row is editable and row isnt disabled and l is editable
		with .editor
			.FinishEditing(false)
			.visible = true
			.setfocus
			.text = r
			.sel = .text.length
		l.Select(r.row)
		l <~ .editor
		l.isediting = true
		l.ShowFast(r.row)
		.cell = r
		.EditingFor = l
		return true
	

function window.Inline (|&InlineEditor|) // avoid getting the struct itself
	opt norefcounts
	return &.inlineeditorplace

function window.InlineEditor (|guicontrol|)
	opt norefcounts
	return .inlineeditorplace.editor


function GuiControl.CanSearch (|bool|)
	require self isnt unsearchable
	if self isa textview
		require !.isinline
		require !.singleline
	return true


function GuiControl.OpenSearch (|bool|)
	opt norefcounts
	debug_require !(self isa window)
	require self isnt NoSearch
	if .CanSearch
		return .opensearchsub
	
	|| f = self
	while {
		if f.CanSearch
			return f.opensearchsub
		f = f.NextFocus(true, false)
	} (f and f != self)


function GuiControl.OpenSearchSub (|bool|)
	|| e	= .window.inline
	|| FOR	= e.editingfor
	require for != self
	 
	if for
		e.FinishAndClear(False)
	if self isa textview
		if .isinline
			return for$.opensearch
		sdlapp.LastSearch := .seltext
	
	|| f = e.editor
	e.editingfor = self
	self <~ f
	debug_require !(self isa window)
	f.size = 115~left  by  15~down to the~top
	f.text = sdlapp.LastSearch
	f.visible = true
	f.setfocus
	f.selectall
	if sdlapp.lastsearch
		e.UpdateSearch(sdlapp.lastsearch)
	return true
