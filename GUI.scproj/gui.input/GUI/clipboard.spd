

module Clipboard
	cpp_part Clip
	|string| _InternalCopy

	cpp_Wrapper SDL_GetClipboardText (|cstring|) 
	cpp_wrapper SDL_SetClipboardText (|cstring| s, |errorint|)
		
	function Data (|string|)
		|| cstr = .SDL_GetClipboardText
		|| s = cstr.Wrap
			return s
		return _InternalCopy
			
	function Text (|string|)
		return .data.FixLineEndings
	
	function Text (assigns: |string| s)
		description "Pass valid UTF-8 only" 
		expect (s) (beep)

		_internalcopy = ""
		
		|| c = s
		if keys.Shift
			c = c.TabsToSpaces
			Notifications <~ "Copied (without tabs):\n" + c.Preview(128)		
		c = c.cstr
		|| err = .SDL_SetClipboardText(c.addr|cstring|)
		if (err!=0) // or s.FindBadUTF8		// osx might fail anyhow
			_internalcopy = c
			Notifications.NotifySDLError		
	
	
	function Clear
		|byte[1]| null 
		.SDL_SetClipboardText((&null[0])|cstring|)


	function NotifiedText (assigns: |string| s)
		opt norefcounts
		if s
			.text = s
			Notifications <~ "Copied: " + s


function string.FixLineEndings (|string| dest="\n", |String|)
	|| type = .DetectLineEndings &~ 1
		if type & 4
			self = .ReplaceAll("\r\n", dest)
		if type & 2
			self = .ReplaceAll("\r", dest)
	return self
	
	
helper string.DetectLineEndings (|int|)
	for (c in self) (i)
		if c == 10
			rz |= 1
		  elseif c == 13
			if self[i+1] == 10 // CRLF
				rz |= 4
				i++
			  else
				rz |= 2
	
