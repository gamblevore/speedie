


module Temporal	

	function InputBit (|uint64| x=temporal.inputbyte,  |bool|)
		return x.CountBits & 1
			
	function InputByte (|byte|)
		return  -1	// want a thread that creates a buffer of data... ideally chooseable via temporal inputs

	function Input8 (|int|)
		return .Inputbyte|int|.countbits
	
	function Walk (|int| required=141, |date| Delay = 10s, |int|)
		|| n = 0
		|| Timeout = Delay + date.now
		while !timeout.fired
			for 256
				n -= 8 - .input8<<1 	 // group-walk
				if (n.abs >= required)
					return n.Sign

	function Majority (|int| bytes=4K, |bool|)
		|| Total = 0
		for bytes
			total += .input8
		return Total+.InputBit > bytes*4

