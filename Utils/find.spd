#!/usr/local/bin/speedie


|| types = dictionary()


main (|file.existing| FindPath, |string| Search)
	expect (Search) ("Requires a search string")
	types["spd"] = "x"
	types["md"] = "x"
	types["txt"] = "x"
	|| t = app["types"]
		types = t.Dict('/')
	
	|| found = app.Collect(FindPath, Search)
	if !found
		"No files contain: $search"


function app.Collect (|file| f, |string| pattern, |int|)
	require	f
	if f.IsDir
		for c.files in f
			if c.visible
				rz+=.collect(c, pattern)
	  elseif !f.isdir and (types["*"] or types[f.ext])
		if f.ReadAll contains pattern
			printline f
			rz++

