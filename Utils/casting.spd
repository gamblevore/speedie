#!/usr/local/bin/speedie


main
	"Type-casting example!"
	|| s = "hello(world)".parse
	|| losing_type = s|object| // losing type-info is ok
	if s isa Message
		"Approach 1: '$s' was tested using 'isa'"
	if s.mustbe(message, s)
		"Approach 2: '$s' was tested using 'mustbe'. Creates errors if s is not a message"
	|| msg = s as Message
	if msg
		"Approach 3: '$s' was tested using 'as'"
	
//	|| blindly = losing_type|message|
	testCasting()
	

/*
class Vehicle {
    var name: String
    init(name: String) {
        self.name = name
    }
}
  
class Car: Vehicle {
    var brand: String
    init(name: String, brand: String) {
        self.brand = brand
        super.init(name: name)
    }
}

func TestCasting() {
	let myVehicle = Car(name: "My Car", brand: "Tesla")
	let myCar = myVehicle as? Car
	if let myCar = myCar {
	    print("My car's brand is \(myCar.brand)")
	} else {
	    print("myVehicle is not a Car")
	}
}
*/

class Vehicle
    |String| name
  
class Car (Vehicle)
    |string| brand
    constructor (|String| name, |String| brand)
		super.constructor(name)
        .brand = brand

function TestCasting
	|| myVehicle = Car("My Car", "Tesla")
	|| myCar = myVehicle as Car
	    "My car's brand is ${myCar.brand}"
	  else
	    "myVehicle is not a Car"
