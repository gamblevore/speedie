#!/usr/local/bin/spd

main {
	|| Amount = 250MB
	|| size = app.args[0]
	|| n = size.Length
	if size endswith "mb"
		Amount = size[0, n-2].int*1MB
	  elseif size endswith "kb"
		Amount = size[0, n-2].int*1KB
	
	"Starting to write ${amount.strsize} XML file"
	
	|| Start = date.now
	|| xml = "auto_generated_$size.xml".out							#require
	xml <~ `<?xml version="1.0" encoding="utf-8"?>
<Catalog>
`
	
	|| Caps = 'A' to 'Z'
	|| Low  = 'a' to 'z'
    while xml < Amount
		|| alive = ("yes", "no")(0.5[])

	    xml <~ "
	<Book>
	    <Title>${caps*16}</Title>
	    <Author alive=\"${alive}\">${low*8} ${low*12}</Author>
	</Book>"
	
	xml <~ `
</Catalog>`

	xml.Flush
	
	"Finished writing ${xml.file} in ${start.ago.seconds} seconds"
}


struct ByteRange
	|byte| A
	|byte| B
	operator Mul (|int| n, |string|)
		return random.shared.Text(n, .a, .b)

extend byte
	operator to	(|byte| b, |byterange|)
		rz.a = self
		rz.b = b
		
	