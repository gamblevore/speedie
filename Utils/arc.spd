#!/usr/local/bin/spd

// Just an example project!

|| X = (app["exclude"] ?? "*.git*,*/cpp,*.strings.txt,*/build*,*.xcodeproj,*.ds_store,*Terminal")
|| Excludes = (X  /  ',')

main (|file.existing| input)
	|| out = app.Process(input)
		"${out.name}: ${out.size.strsize}"
	
	
function app.Process (|file| input, |file|)
	if !input.IsDir
		return app.UnArchive(input)
	
	rz = input.SetExt("arc").file
	|| out = jbin(@tmp, "archive")
	out.file = rz
	out.AddStr(input.name)
	out.Enter
	out.ArchiveSub(input)
	out.Exit(2)
	

function jbin.ArchiveSub (|file| Item)
	for ch.files in item
		if ch.lowercase globbed_by Excludes
			"!! $ch"
		  elseif !ch.isdir
			.enter(@tmp, ch)
			.Add(@bin, ch.readall) // !>:3
			.exit
		  elseif !ch.isSymlink
			.ArchiveSub(ch)
	

function app.UnArchive (|file| input, |file|)
	// just an example for now
