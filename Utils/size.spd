#!/usr/local/bin/spd

app.usage = "Usage: size path [...]
--types=cpp/c/h               Only report these types
--v=true/false                Count invisible files
"

|bool|		ShowInvis = app.yes("v")
||			Types = app["types"].trim.dict('/')
|[message]| Found


main (|[file]| FileList)
	if !FileList
		Quit app.Usage
	
	for F in FileList
		F.CountAll(f.path.length)
	
	found.sort(MessagePositionSorter)		
	for m in found
		"${m.name}: ${m.position.strsize}"


function file.CountAll (|int| base, |int64|)
	if .isdir
		for c.files in self
			if !c.IsSymLink and (ShowInvis or c.Visible)
				rz += c.CountAll(base)
	  else
		require !types or types[.ext]
		rz = .size
	|| m = message(@str, self[base...])
	m.Position = rz
	Found <~ m
