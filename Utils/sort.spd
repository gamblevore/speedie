#!/usr/local/bin/speedie

|[file]|				Found
|dictionary|			Types = ["spd":"x"]
|int|					Total

main
	|| t = app["types"]
		types = t.Dict('/')
		
	for f in app.args
		.Collect(f.ExistingFile)
	found.sort(MySorter, true)
	|| remover = .Findremover
	for f in found
		"${f.trimstart(remover)} --> ${f.size.strsize}"
	"Total: ${Total.strsize}"


function App.FindRemover (|string|)
	require app.args == 1
	|| s = app.args[0]
		return s.PathDir
		

function app.collect (|file| f)
	require	f
	if f.IsDir
		for c.files in f
			if c.visible
				.collect(c)
	  elseif types[f.ext]
		total += f.size
		found <~ f

	
function MySorter (SorterComparer)
	if a isa file and b isa file
		return a|file|.size < b|file|.size
	