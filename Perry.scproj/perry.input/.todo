
	
							Todo

* VM?
* nil-checking
	* What is remaining?
		* Let certain funcs be nil-testers... (Cast to bools)
		* specify ?? and ? behaviour to be like objc.
			* i seemed to have often trouble with "init". like on empty arrays?
			* "init" isnt much use without optionals anyhow.
	* What is next?
		* test for optional use in a nil-sweep. They are "problems".
			* nil-sweep uses a "time" feature. So each instruction or statement increases the time. branches and loops/vfuncs act differently. We always use the earliest time.
		* Just put the nil-sweep before refcounting.
	* What do we have?
		* we created "optional" decls, and can mark or render optionals


// Do later
* galaxxies C++ compile issues
* not-compilable functions blocks lookups, on a .dot function call.
* RefOpts. Do it bit by bit
	* get property but only did math
	* mark a few string funcs as not-modifier/disowner/capturer
	* mark entire class
	* fast capture of disowned things. like: r1 <~ r2.pop
	* check entire program for modification during nil-sweep
		* Start with leaf-funcs.
* skinning support? .hellokitty or .emo file endings could reskin the IDE dynamically.
* clearing errors from an active build (perhaps the error was a C++ compile error)... (cleared by just refreshing the error) seems to clear the build state too.
* if w isa P<tab>// no need to autocomplete things that w can't be.
* TextView error/find resync
* double clicking |abc| on the || should sel the entire thing, doing on the inside should sel the inside
* Find-replace!
	* syntactic-mode also
* too long text in listview draw as much as we can
* First use of tab (in func) or () (to wrap) on opening perry doesn't work.

