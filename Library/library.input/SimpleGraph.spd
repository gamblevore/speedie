
// seems like a good system?

class SimpleGraph (dictionary)
	saveas nil
	|object?| Owner
	|string| Name
	contains SimpleGraph
	
	constructor (|string| name="")
		super.Constructor
		.name = name
	
	syntax append (|SimpleGraph| other, assigns:|bool|value=true)
		|uint64| A = .ObjectID
		|uint64| B = other.ObjectID
		if (A > B)
			A >>= 32
		  else
			B >>= 32
		|uint64[1]| Data
		Data[0] = A ||| B
		|| str = string.Copy(&Data[0], platform.PointerBytes)
		other[str] = (self, nil)(value)
		self[str] = (other, nil)(value)
	
	function Clear
		for obj in self
			(obj <~ self) = false

	destructor
		.Clear
	
	

function @SimpleGraph.Test
	|| n = 10
	|[SimpleGraph]| items
	for i in n
		items <~ SimpleGraph( string.byte('A'+i) )
	
	for (ii in items) (i)
		for j in (i + 1 to n-1)
			if (0.1)[]
				ii <~ items[j]!
	
	for t in items
		"${t.name} is connected to:"
		for found in t
			"\t${found.name}"
	
		
