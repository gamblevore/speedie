

/*
	Jeebox internals. By Theodore H. Smith...
*/


module Terminal
	|array of array|	Screen
	|faststring| 		fs
	||					baseline = 0
	|date| 				LastDisplay

	constants
		w = 80
		h = 35 // too many lines will break the clearscreen/reset function!
		TermClear = "\1b[2J"
		TermReset = "\1b[1;1H"

		
	syntax append (|string| text, |int| x = 0, |int| y = -1, |int| Colors = 0)
		.Init
		if y == -1
			y = .baseline++
		|| within = 0
		for c in text
			if c.istextline
				y++
				within = 0
			|| xx = x+within
			if  xx inrange w  and  y inrange h
				.Screen[y][xx] = string[c]
			within++
	

	helper Init
		require !.Screen
		(TermClear).puts
		for h
			|| s = []
			s.SyntaxAppend(" ", w)
			.Screen <~ s


	function Flat (|string|)
		visible
		opt norefcounts
		.fs := FastString()
		for line in .Screen
			for (ch in line) (i)
				if ch isa string
					.fs <~ ch
				line[i] = " "
			.fs <~ '\n'
		return .fs.GetResult


	function Display
		.init
		|| now = date.now
		if .LastDisplay
			app.Sleep((LastDisplay + 1s/60) - now)
		.LastDisplay = now
		.baseline = 0
		TermReset.puts
		.flat.puts
		

helper string.puts
	.cstr.cstring.puts
