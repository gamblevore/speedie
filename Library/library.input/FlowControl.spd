
/*
how to do this?
we really want this to STREAM in. So... how? We want stringstream to stream

I think combining the files into one, IS possssible... but we SHOULDN'T do it first.
Its too many complex tricky things to solve all at once. First get the thing working...
then see if we can optimise it.
*/


struct FlowPart
	|FastBuff|			Buff
	|stringstream|		Read
	|faststring| 		Write
	|CompressionStats|	Stats
	
	function init (|string| path, |string| type, |bool|)
		|| sign = type * 2
		.write = path.AddExt(".flow."+type).out #require
		.read = path.AddExt(".expected."+type).in(sign)
		.write <~ sign
		return .buff.Alloc(1MB)

	function Flush
		.buff.CompressInto(.write, .stats)
		.buff.Curr = .buff.start
	
	function Test (|uint| Expected, |int| Bytes)
		opt norefcounts
		|| r = .read
			|| Found = r.uint(bytes)
			if Found != Expected
				"Flow Control differs here: ${app.StackTrace}"
				debugger 




class FlowControl
	|FlowPart| 			Bits
	|FlowPart| 			Loops
	|bool| 				OK
	|uint16| 			LoopCount
	
	constructor (|string| Path)
		.ok = .loops.init(path, "w") and .bits.init(path, "b")

	function While (|bool| value, |bool|)
		if value
			.LoopCount++
			return true
	
		|| c = .LoopCount
		.LoopCount = 0
		if .Loops.buff <~ c
			.loops.flush
		.loops.Test(c, 2)

	function Cond (|bool| value)	
		if .bits.buff <~ value|byte|
			.bits.Flush
		.bits.Test(value|uint|, 1)

