

/*
	API to check if something different happened to the flow control from one platform to another
	only two functions should be called... .While and .Cond
*/


class FlowControl
	linkage:cpp_part Flow
	|FastBuff|				Buff
	|stringstream|			Read
	|faststring| 			Write
	|bool| 					OK

	constructor (|string| Path)
		flow off
		printline "Capturing flow: " + path
		.write = path.AddExt(".flow").out
		.ok = .buff.Alloc(1MB)
		.init

	helper init
		if .write
			|| readpath = .write.file.AddExt(".expected")
			if readpath.fileexists 
				.read = readpath.in

	helper Flush
		flow off
		.buff.tmpstr.CompressInto(.write, stats)
		.buff.Curr = .buff.start
		.write.Flush
	
	helper Test (|uint| Expected, |int| Size)
		flow off
		opt norefcounts
		|| r = .read
		require r != nil
		debugat
		|| Found = r.uint(Size)
		if Found != Expected
			"Flow Control differs here: ${app.StackTrace}"
			debugger 

	destructor
		FlowControl.Disabled = int.max
		.flush
		printline stats.render
		stats.clear

	helper Cond (|bool| value)	
		flow off
		visible
		if .buff <~ value|byte|
			.Flush
		.Test(value|uint|, 1)

	syntax UsingComplete
		flowcontrol.stop
	
	module
		|uint| 			Disabled = int.max
		|flowcontrol|	Flow 
		|CompressionStats| 		Stats
		
		function Activate
			.Disabled = int.max // in case its set badly
			.flow = FlowControl(app.ExePath)
			.Disabled = 0
		
		function Stop
			.Flow = nil
			.Disabled = int.max

		syntax Using (|flowcontrol|)
			.Activate
			return nil



