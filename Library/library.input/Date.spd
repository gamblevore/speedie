
/*
	Jeebox internals. By Theodore H. Smith...
*/


datatype Date (int64)
	syntax cast (|bool|)
		return self|bool|

	syntax cast (|float|)
		cpp_Part CastFloat
		return .seconds
	
	syntax cast (|f64|)
		cpp_Part CastDouble
		return .seconds
	
	
	constants
		kOneSecond = 0x10000
		kTicks = 0x10000
		kTickBits = 16
		kClocksPerSecond = 1000000
		kSecondsPerDay = 86400
		kSecondsPerWeek = 604800
		kSecondsPerMonthApprox = 2628000
	
	
	syntax Compare (|float| Other, |bool|Aware, |int|)
		|| oof = other * kOneSecond
		if (self > oof)
			return 1
		if (self < oof)
			return -1
	
	function WholeSeconds (|int64|) // needs 48 bits!
		return self >> kTickBits
	
	function Seconds (|f64|)
		return self|f64| / kOneSecond
	
	function ReportAgo (|string|)
		|| s = .seconds
		|| unit = "s"
		if s < 0.01
			s*=1000
			unit = "ms"
		return s.Render + unit
		
		
	function Ago (|date|)
		if self
			return now() - self
	
	render DMY
		fs.AppendDMY(self)
	
	render RenderDurr
		fs.AppendDurr(self)
		
	function Fired (|bool|)
		if self != 0
			return self < date()
		
	function Durr (|f64|)
		disabled "is this even used? Its just .seconds?"
		return self|f64| / kTicks|f64|
	
	render  // hmmm... i guess this is just for data-formats.
			// but that is very inconsistant because most renders are "Readable"
		fs.appendintegerastext(self)

	function Ticks (|int|)
		disabled "is .ticks math right?"
		return self mod kTicks
	
	function DayOfWeek (|int|)
		return .Days mod 7
	
	function Days (|int64|)
		return (.wholeSeconds / kSecondsPerDay)
	function MonthsApprox (|int64|)
		return (.wholeSeconds / kSecondsPerMonthApprox)

	function WeekOfYear (|int|)
		return .Weeks mod 52
	
	function TimeID (|uint64|)
		cpp_wrapper

	function Weeks (|int64|)
		return (.wholeSeconds / kSecondsPerWeek)

	function int64.Seconds (|date|)
		return self << 16
	
	iterator
		|| StartDate = date.now()
		|| EndDate = StartDate + self
		|date| CurrTime
		while date.now(CurrTime) < EndDate
			yield (CurrTime - StartDate).seconds|float|

	module
		function Seconds (|f64| s, |date|)
			return s * kOneSecond
		function TimeID (|uint64|)
			.now.timeID
			
		function Ticks (|int64|)
			return (.now>>10) //64KB-->64

		function Now (|Date|)
			cpp_wrapper JB_Date__Now

		function now (|&Date| out, |Date|)
			cpp_part KindaNow
			*out = .now()
			return *out

		function New (|Date|)
			cpp_part New0
			return now()

		function TimeStamp  (|uint64|)
			cpp_Wrapper RDTSC
			
		function Hash  (|uint64|)
			return .timestamp.hash

