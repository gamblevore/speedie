// Copyright, Theodore H. Smith 2019.// Released under jeebox-licence http://jeebox.org/licence.txt#ifndef AS_LIBRARY#ifdef TARGET_WIN32#include <ED_DirReaderWin32.h>#define _A_SUBDIR 0x10extern "C" {inline bool IgnoreDotDot( NativeFileChar* c ) {	if ( c[0] != '.' )		return false;	char c1 = c[ 1 ];	if ( c1 == 0 )		return true;	return (c1 == '.' and c[2] == 0);}bool ReadDir_( DirReader* dir, NativeFileChar** pChildName, u32* pNameLength, bool* pIsDir ) {	NativeFileChar* ChildName;	do  {		if ( dir->IgnoreFirst ) {			dir->IgnoreFirst = false;		} else if ( _wfindnext( dir->Handle, &dir->DirEnt ) == -1 ) {		    return false;		}		ChildName = dir->DirEnt.name;	} while ( IgnoreDotDot( ChildName ) );		u32 NameLength = OPStr16LenC0( ChildName ) * 2;	bool IsDir = (dir->DirEnt.attrib & _A_SUBDIR);	*pIsDir = IsDir;	*pChildName = ChildName;	*pNameLength = NameLength;	return true;}}#endif#else	// stop linker errors.	extern "C" void Stub_JB_DirReaderWin32 () {}#endif