


datatype ElementList (uint) {
	function Mini (|uint|) {
		Opt NoRefCounts
		|| clearout = Element.noun+Element.adjective+Element.adverb
		|| x = self
		if (x & clearout)
			x |= clearout
		return x
	}

	render {
		opt norefcounts
		|| f = Element.__first
		|| gotany = false
		while f
			if (self & f.catbits)
				self &=~ f.catbits
				if (gotany)
					fs <~ '/'
				gotany = true
				fs <~ f.name
			f = f.next|Element|
	}
	
	function word.SyxBits (|uint|) {
		._SyxBits := .eles.syxbits
		return ._SyxBits
	}
	
	function SyxBits (|uint|) {
		opt norefcounts
		|| f = Element.__first
		while f
			if (f.catbits & self)
				rz |= f.syxbits 
			f = f.next|Element|
	}
	
	module {
		function All (|ElementList|) {
			return -1
		}
	}
}

