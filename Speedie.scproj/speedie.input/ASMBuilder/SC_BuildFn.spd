

extend_module ASM
	helper TestASMSub (|message| tests)
		opt norefcounts
		asmstate.sh.PackMakerInit
		|| list = tests.last(@arg)
		|| testname = tests[@thg]
		require list and testname

		textassembler.assemble(list)
		|| fn = SpdAssembler[testname]
			|| ff = fn.finish.run


	function TestASM 
		require options.ModePack
		if options.dev >= 2
			asm.noisyasm = 3
		if asm.noisyasm >= 3
			.Listinstructions

		require options.dev > 0

		using ErrorSeverity.Warning
		|| T = ( file://syntax.asm ).parse[@tmp, "tests"]
			.TestASMSub(T)
	

function message.GetASMFunc (|message|)
	opt norefcounts
	|| op = .next(@opp, "=")
	|| Adj = op.Next(@adj)
		return adj[@func]


function FatASM.Encode (|ASM|)
	return (ASM.encoders[.op]!)(self)		

	

function message.Reg (|asmreg|)
	return .regornum(true)|int|.reg

