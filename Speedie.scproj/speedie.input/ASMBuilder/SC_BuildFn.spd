

extend_module ASM
	helper TestASMSub (|message| tests)
		opt norefcounts
		|| list = tests.last(@arg)
		|| testname = tests[@thg]
		require list and testname

		textassembler.assemble(list)
		|| fn = TreeAssembler[testname]
			|| ff = fn.finish.run


	function TestASM 
		debugger
		.enc1
		require options.ModePack
		|| dev = app.pref("dev").int
		if dev >= 2
			asm.noisyasm = 3
		if asm.noisyasm >= 3
			.Listinstructions

		require dev > 0

		using ErrorSeverity.Warning
		|| T = ( file://syntax.asm ).parse[@tmp, "tests"]
			.TestASMSub(T)
	

function message.GetASMFunc (|message|)
	opt norefcounts
	if .reg >= 0
		|| op = .next(@opp, "=")
			|| Adj = op.Next(@adj)
				return adj[@func]


function FatASM.Encode (|ASM|)
	return (ASM.encoders[.op]!)(self)		

	
function @asm.Enc1
	|FatASM| R
	R.op = ASM.DSUB
	R.r[0] = 3
	R.r[1] = 2
	R.r[2] = 1
	r.r[3] = 0
	|| oof = R.Encode


function message.Reg (|asmreg|)
	return .regornum(true)|int|.reg

