

/*
	OK... how do we do this?
	Last attempt was a bit of a debacle. But it will work this time!
	
	* So... we want to do this before a loop.
		* Loop comparison ints/floats need hoisting
	
	|| x = glob
	|| y = glob
	while 1
		|| z = glob
	
	OK... what do I do?
	
	
*/



struct SC_Hoister
	linkage
		cpp_part Hoi
	|SCDecl--[6]|	Items
	|uint64|		Closer
	|int|			Count
	
	constants
		MinHoistScore	= 3

	function HoistGlobal (|message| prop,  |scdecl| decl)
		opt NoRefCounts
		|| dest = ASMState.sh.DeclareMe(prop, decl)		// Pre-declare glob.
		ASMType.GlobAddr(decl, prop, dest)
		decl.NilReg = dest.reg ||| nilreg.Hoisted
		.Items[.Count++] = decl

	function HoistConst (|message| prop,  |scdecl| decl)
		opt NoRefCounts
		|| dest = ASMState.sh.DeclareMe(prop, decl)		// Pre-declare glob.
		asmstate.sh.NumToReg(prop, decl.exportposition, dest, dest.µtype)
		decl.NilReg = dest.reg ||| nilreg.Hoisted
		.Items[.Count++] = decl
	
	function Unhoist (|asmreg|)
		opt NoRefCounts
		for d in .Items
			loop d
			d.nilreg = 0
		return ASMState.sh.CloseVars(.Closer)
	
	function PreCheck (|message| exp, |int| Score = 0)
		opt norefcounts
		|| fn = exp.func
		if fn == @type
			exp = exp.first // no go into the type!
		  elseif fn == @func
			exp = exp.second
		if  (score >= 0)  and  (fn == @dot or @thg or @num)  and  (.Count < –count .items)
			|| prop = exp.ASMDecl
			if prop.nilreg isnt hoisted
				if prop is const
					if (score >= 1<<29) and prop.exportposition
						.hoistConst(exp, prop)
				  elseif prop is Global
					.HoistGlobal(exp, prop)
	
		for ch.fast in exp
			|| add = 0
			if ch.func == @tmp
				|| ty = ch.ASMType
				add += (ty is kWhile) * MinHoistScore
				add -= (ty is kIf)
				
			.PreCheck(ch, add + score)

