
// notes at bottom
function Tran_OptPath (tranfunc)
	// we need to make sure that every optimisation path is tested!!!
	// we don't wanna generate buggy code!
	|| name = node.first
	require name.ExpectLast and name.ExpectString
	if Options.TargetDebug
		|| i = ++SpdAssembler.OptPathCount
		SpdAssembler.OptPathNames[i] = name
		node.BecomeMacro(Macros.OptPath, [i.msg])
		TypeOfExpr(node, name_space)
	  else
		node.SafeRemove


function SpdAssembler.MarkBlocks (|&FatASM| curr, |int| length)
	|| first = asm.JUMP,  || last = asm.LUPU
	|| B = 1
	for i in length
		curr.BlockNum = b
		|| op = curr.op
		if (op >= first and op <= last)
			B++

	
function Âµfunc.Sanity
	|| Curr = .IR
	|| length = .length
	if curr[-1].op or curr[length-1].op // bad


extend SpdAssembler {
|int| 			OptPathCount
|int[64]|		OptPaths
|message[64]|	OptPathNames
}
