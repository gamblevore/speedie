

class µFunc
	linkage
		cpp_class ASMFunc
		cpp_part ASMFunc 
	|scfunction|			Fn
	|&FatASM|				IR
	|int|					Length
	|bool|					OK

	constructor (|scfunction| fn, |&FatASM| IR)
		.fn = fn
		.IR = ir
		fn.asm = self

	function Name (|string|)
		return .fn.ExportName

	function Finish (|µFunc1|)
		debugger
		return µFunc1(.length, 4, .IR|&byte|)
		

/// TEXTUAL STUFF		
	render
		fs <~ "asm ${.fn.name}\n"
		|| skip = 0
		for µ in self
			if skip > 0
				skip--
			  else
				if µ.op < 16
					skip = µ.op & 3
				fs <~ '\t'
				µ.render(fs)
				fs <~ '\n'

	iterator
		|| CurrInst = 0
		|| Addr = .IR
		while currinst < .length
			yield Addr+currinst
			currinst++



function JBin.Add (|µFunc| fn)
	.AddMemory(@bin, fn.length*4)
	for i in fn
		.AppendInt(i.Encode)
