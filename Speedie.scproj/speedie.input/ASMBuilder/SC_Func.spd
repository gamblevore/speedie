

class µFunc 
	linkage
		cpp_class ASMFunc
		cpp_part ASMFunc 
	|scfunction|			Fn
	|&FatASM|				IR
	|int|					Length
	|bool|					OK

	constructor (|scfunction| fn, |&FatASM| IR)
		.fn = fn
		.IR = ir
		fn.asm = self

	function Name (|string|)
		return .fn.ExportName

	function µTest (|memory of asm|)
		description "Generate some code (only for testing)."
		rz = asm[.length*3]$
		rz.length = rz.capacity
		.RenderInto(rz.ptr, rz.ptr+rz.length)
	
	
	function RenderInto (|!&ASM| Where, |!&asm| After, |!&asm|)
		for i in self
			where = i.renderinto(where, after)
		return where


	function memory.Run (|memory of asm| self, |&ivec4| Args = nil, |int| ArgCount=0, |int64|)
		cpp_part RunArgs
		|| r = jb_vm.vm.Registers(true)
		if args
			for i in argcount
				r[i] = args[i] 
		
		return jb_vm.Run(.ptr, .length)


/// TEXTUAL STUFF		
	render
		fs <~ "asm ${.fn.name}\n"
		for µ in self
			fs <~ '\t'
			µ.Renda(fs)
			fs <~ '\n'

	iterator
		|| CurrInst = 0
		|| Addr = .IR
		while currinst < .length
			yield Addr+currinst
			++currinst



function JBin.Add (|µFunc| fn)
	.AddMemory(@bin, fn.length*4)
	for i in fn
		.AppendInt(i.Encode)
