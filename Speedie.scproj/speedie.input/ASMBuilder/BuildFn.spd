

extend_module ASM
	helper TestASMSub (|message| tests)
		opt norefcounts
		Assembler.sh.PackMakerInit
		|| list = tests.last(@arg)
		|| TestName = tests[@thg]
		require list and testname

		textassembler.assemble(list)
		|| fn = .GetASMFunc(testname)
			|| ff = fn.ÂµTest
			jb_vm.vm.Registers(true)
			jb_vm.Run(ff.ptr, ff.length)


	helper GetASMFunc (|message| m, |scfunction|)
		cpp_part AccessStr
		opt norefcounts
		return compiler.XFunc(m.name, m)	#expect (m, "This function has no ASM")


	function TestASM 
		require options.ModePack
		//if options.dev >= 2
		asm.noisyasm = 3

		require options.dev > 0

		using ErrorSeverity.Warning
		|| T = ( file://syntax.asm ).parse[@tmp, "tests"]
			.TestASMSub(T)
	

function message.GetASMFunc (|message|)
	opt norefcounts
	|| op = .next(@opp, "=")
	|| Adj = op.Next(@adj)
		return adj[@func]


function FatASM.Encode (|ASM|)
	//return (ASM.encoders[.op]!)(self)		

