

module TextAssembler
	|dictionary of uint64|			Labels
		
	
	function TextFunc (|message| msg, |bool|) // assemble a function from text
		|| fn = SCFunction.new
		fn.source = msg
		require Assembler.Sh.InitAndStartfunc(fn)
		Assembler.Sh.TextFuncSub(msg)
		compiler.exportnames[fn.exportname] = fn
		Assembler.Sh.FinishASM
		Assembler.Sh.LoadLabelJumps
		.Labels.dispose


	function TextData (|message| msg) // assemble a function from text
		// how?


	function Assemble (|message| msg)
		opt norefcounts
		for ch in msg
			if ch istmp "asm"
				.textfunc(ch)
			  elseif ch istmp "data"
				.textdata(ch)

