

struct NilTracker
	linkage:cpp_part nil
	|uint| 				Count
	|uint| 				ParamCount
	|message|			If
	|scdecl--[1024]|	Items
	

	syntax Append (|scdecl| d)
		expect (.count < 1024) (d.source, "Too many variables")
		.items[.count++] = d

	function Start (|scfunction| f)
		opt norefcounts
		.Count = 0
		for d in f.args
			self <~ d
		.ParamCount = .Count
	
	function Tighten (|scfunction| f)
		opt norefcounts
		for (d in f.args) (i)
			if d.NeedsNilTighten
				f.args[i] = d.NilTighten
		if f.ReturnType.NeedsNilTighten
			f.ReturnType = f.ReturnType.NilTighten
							
	function Pop (|scdecl|)
		if .count
			return .items[--.count]
			
	function Item (|uint| i, |scdecl|)
		if .count > i
			return .items[i]
	
	function Restore
		opt norefcounts
		for i in .count
			.item(i).restorenil
	
	iterator
		|| n = 0
		while (n < .count++)
			yield self[n]


function SCDecl.RestoreNil
	.nilused = .nildeclared


function SCDecl.NilTighten (|scdecl|)
	if .NilUsed isnt Nil
		return .MakeReal
	if .nilused	is Either
		return .MakeOptional
	debugat
	return self


function SCdecl.NeedsNilTighten (|bool|)
	if self
		if (.NilDeclared isnt stated) and (.nilused is stated)
			return true
		return false
		if .nilused is Stated
			if !options.perry
				debugat
