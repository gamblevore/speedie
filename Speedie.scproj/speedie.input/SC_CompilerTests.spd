
function Compiler.FileSanityTests
	// Basic sanity checks. Make sure file functions work.
	// Most read/write functions already tested via normal code
	// but nested paths / deleting / linking, need these tests.
	|| A = "/tmp/SpdPathHidden".file
	|| B = "/tmp/SpdLinkHidden".file
	|| C = A.path.child("a/b/c/d/e.txt")
	|| D = B.path.child("a/b/c/d/e.txt")
	for i in 3
		if StdErr.ok
			.FileTestsSub(A,b,c,d)
	A.DeleteAll
	B.DeleteAll


helper Compiler.FileTestsSub (|file| Dest, |file| Src, |string| A, |string| B)
	Dest.DeleteAll
	Src.DeleteAll
	|| q = â€“SELF_TEST_NATURAL // // //
	expect (!Dest.Exists and !Src.Exists) (q)
	
	// So we have a few paths... and they don't exist, lets create them.
	Src.linkto(Dest)
	A <~ q

	|| ReadBack = B.file.ReadAll
	check (ReadBack == q) ("Testing link+write failed. Read: " + Readback)
		

//function app.FlowTest (|string| path)
//	|| msg = path.file.parse$
//	|| str = msg.Render$
//	for 1000
//		if 0.1[] : exit
//	path = path.AddExt("flowtest")
//	path <~ str
//	

target debug 
	class CArrayTest
		|int[20]| Items
		
		function A (|&int| a)
			
		function B
			visible
			.a(.items)

