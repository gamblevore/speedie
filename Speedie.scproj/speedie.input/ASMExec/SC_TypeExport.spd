


/*
	So what do we do?
	we want to do the nil stuff?
	first... perhaps make the nil option a preference?
	so its not noisy on all computers?
	
	OK... so now we can do that... what next?
	
	well... what is next?
	
	im not sure...
	
	we wanna use it?
	
	so... we hav some nil checkrs...
	
	we gotta do this in xcode, cos actually the problem is that a lot of objects have no decl!
*/


// we need to spec this out

datatype BranchState (byte)
	constants
		|BranchState|
		Always		= 2
		Never		= 1
		Perhaps		= 3

	function Reverse (|nilstate|)
		if self == never
			return always
		if self == Always
			return never
		return self
		


datatype NilState (byte) // Exec.scproj needs this here
	constants
		|nilstate|
		Failed		= 0
		Nil			= 1	
		Realish		= 2 
		Either		= 3
		Stated		= 4
		Optional    = Either + Stated			// |type| x = nil,   x = array[1000]
		Real		= Realish + Stated			// || x = message(),  x.position

	function Always (|bool| Y, |branchstate|)
		if self is either
			return branchstate.Perhaps
		if (self is real) == Y
			return branchstate.Always
		return branchstate.Never
			
	syntax is (|nilstate| type, |bool|)
		return (self & type) == type
	syntax isnt (|nilstate| type, |bool|)
		return !.SyntaxIs(type)


struct ASMVarType
	contains object
	|int|					Contains // also a class
	|int|					ClassNum
	|int|					C_Array
	|byte|					PointerCount
	|NilState|				Expected
	|NilState|				Found

// OK, so we wanna export this and import it.
// can we make this all numbers? no pointers.
// I could make a type-tree system...
// so each type is based on another type.
// |DataTypeCode|  			TypeInfo // belongs on the class
