

main // speedie main {
	target debug
		|| debug = 1
	  else
		|| notdebug = true
	
	target viabuilder
		|| builder = 2
	  else
		|| notbuilder = true
	
	Compiler.SetupEnv	
	Compiler.MiniTests
	Compiler.Main
	Compiler.PrintResults


function Compiler.Main
	if .EnterCompile
		using FlowControl.SilentAllow("Speedie"+options.variant, target~ViaBuilder)
			.CompileTime


function Compiler.EnterCompile (|bool|)
	return  !.TryVariousStartModes  and  FeedBack.ParseArgs  and  !interact.EnterAutoComplete


function Compiler.PrintResults
	|| OK = stderr.ok
	.PrintStats
	.PrintCompileErrors
	if SpdProcess.parent != nil
		"Exiting Speedie ${app.id}"

	if options.selfreplacement and filedes.stdout.isterminal
		if .variantsuffix ~= "Test"
			if ok
				app.say("Speedie Success", false)
			  else
				app.say("Failed", false)
	if Options.Beep
		"\07"


function Compiler.MiniTests
	.testdate
	.testTask
	.testdict


function compiler.ClearEnvs
	// osx freaks out sometimes otherwise
	// it's only specific flag that needs clearing tho... better to just find and remove it
	for (v in app.env) (k)
		if k ~!= "HOME" and "LOGNAME" and "PATH" and "PWD" and "SUDO_USER"
			app.childenv(k) = nil


function compiler.SetupEnv
	opt norefcounts
	FlowControl.FlowMode = FlowControl.Off // can enable via "log"
	if !Options.Variant
		FlowControl.SuggestSwitch = false

	.ClearEnvs
	app.PrefsInit(-1)
	
	options.dev = app.pref("dev").int
	if !app.IsMainThread
		app.ThreadName = "SpeedieDebug"

	errorcolors.DisableIfNoTerminal
	error.AutoPrint = 1
	pico.GlobalConfig.DesiredThreadCount = 1
	
	if pico.parent
		error.AutoPrint = 0
		ErrorColors.enabled = false


api Speedie_Main (|&pico| comms, |int| Mode, |&cstring| args, |ErrorInt|)
	cpp_name Speedie_Main 
	pico.parent_ = comms // phew
	rz = app.sp_run(args, mode&4)
	comms.config.name = "Speedie"
	
	if rz == 0
		rz = app.sp_run(args, mode)

