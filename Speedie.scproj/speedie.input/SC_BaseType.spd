


datatype SCBaseType (int)
	constants (
		|SCBaseType|
		Module = 0 // not actually a type
		Nil
		DataType
		FuncProto
		Struct
		Object
	)
	syntax is (|scbasetype| d, |bool|)
		return self == d


extend scclass
	function BaseType (|scbasetype|)
		if .isobject
			return SCBaseType.object
		if .isdatatype
			if !.funcproto
				return SCBaseType.datatype
			  else
				return SCBaseType.funcproto
		if .isstruct
			return SCBaseType.struct
		debugger
			
		
	syntax equals (|scbasetype| d, |bool| aware, |bool|)
		cpp_part EqualsType
		if self and d > scbasetype.nil
			// use .basetype instead...
			if d is object
				return .isobject
			if d is datatype
				return .isdatatype and !.funcproto
			if d is struct
				return .isstruct
			if d is funcproto
				return .funcproto
