

function compiler.PrintCompileTime (|date| durr) 	
	require StdErr.OK and !options.silent
	|| fs = faststring()
	fs.normal  "Stages",		fs <~ Compiler.CurrStage
	fs.normal  "Classes",		fs <~ compiler.ReachedClassCount
	fs.normal  "Funcs",			fs <~ "${compiler.streachedfunc} / ${compiler.funclist.length}  // (${compiler.stLibFuncs} lib)"
	fs.normal  "Strings"
	|| avg = stringcorrector.TotalSize|float| / stringcorrector.list.length|float|
	fs <~ "${stringcorrector.list.length} / "	
	stringcorrector.TotalSize.strsize(fs)
	fs <~ " // (avg "
	fs.appendfloat(avg, 1)
	fs <~ ")"
	if VM_Builder.Total
		fs.normal  "µCodes",			fs <~ VM_Builder.Total
	if spdassembler.OptPathCount
		fs.normal  "µOpts",				fs <~ SpDAssembler.OptPathCount
	fs.normal  "Total Elapsed",	durr.renderdurr(fs), fs <~ "s"
	fs.normal  "Input Src",		Compiler.stTotalSourceSize.strsize(fs)
	if options.color
		fs <~ errorcolors.normal
	printline fs


function faststring.PrintStatType (|string| name, |int| count)
	if count
		self <~ '\n'
		self <~ name
		self <~ ' '
		self <~ count


function compiler.PrintStats 
	require options.argstats
	|| fs = faststring()
	fs <~ "FuncStats: "
	for i in 12
		|| c = scfunction.FuncStats[i]
			if i
				fs <~ ", "
			fs <~ i
			fs <~ ":"
			fs <~ c
	
	SCFunction.PrintStats(fs)
	printline fs


function compiler.PrintCompileErrors
	if Options.Warnings
		require stderr.hasanything
	  else
		require StdErr.hasproblems
	stderr.PrePrintErrors

	if (SCFunction.DisabledPoints)
		"Disabled functions called ${scfunction.DisabledPoints}x!".printlinecolor(errorcolors.error)
	
	|| MinSev = (ErrorSeverity.warning, ErrorSeverity.problem)(Options.Warnings) 
	.PrintErrors(MinSev)
	stderr.clear


function compiler.VariousSelfTests
	|| t = Jeebox.test // bug if put into compiler.run!. Wierd!
	if (options.perryoutput < 2) and !options.scripting and !SpdProcess.Parent
		if (Cpp_Export.FindGlobalsCpp*12).CompressTest(false) and options.PrintLibraries
			"Compression: OK"


function compiler.TimeTest (|date| elapsed, |bool|)
	flow off
	//
	|| CanInstall = true
	flowcontrol.disabled++
	if (Options.SelfReplacement) and (Options.Variant ~= "Test") and (platform.release)
		|| ReliableTime = (64.0*1024.0*2.5)|int| // in case my date creation code has a bug... which did happen a few times
		CanInstall = elapsed < ReliableTime
		check (CanInstall) ("Not installing as compile duration was over 2.5s. Perhaps this speedie has a bug leading to excessively slow compiles?")
	flowcontrol.disabled--
	return CanInstall


function compiler.CompileTime 
	if !options.output_path and options.UseScriptLoc
		.ScriptLoc(compiler.originalinputpath)		
	
	if options.SelfReplacement // avoid failing needlessly
		.FileSanityTests // sometimes this fails due to lack of permissions in xcode...
						 // xcode gives lower perms to it's builder scripts, strangely.
	.VariousSelfTests
	SC_Saver.TestSaver~quietly

	|| elapsed = .CompileAll~timeit
	.PrintCompileTime(elapsed)

	if stderr.ok
		TransCompiler.ExportAndInstall(elapsed)
		if stderr.ok
			stringcorrector.CorrectStrings

