

function compiler.PrintCompileTime (|date| durr) 	
	require StdErr.OK and !options.silent
	|| fs = faststring()
	fs.normal  "Stages",		fs <~ Compiler.CurrStage
	fs.normal  "Classes",		fs <~ compiler.ReachedClassCount
	fs.normal  "Funcs",			fs <~ "${compiler.streachedfunc} / ${compiler.funclist.length}  // (${compiler.stLibFuncs} lib)"
	fs.normal  "Strings"

	|| N = StringCorrector.CppStrings.length
	|| avg = StringCorrector.TotalSize div N
	fs <~ "$N from "	
	StringCorrector.TotalSize.strsize(fs)
	fs <~ " // (avg "
	fs.appendfloat(avg, 1)
	fs <~ ")"

	fs.Normal  "Globals"
	fs <~ "lib "
	packmaker.LibGlobSize.strsize(fs)
	if packmaker.PackGlobs
		fs <~ ", app "
		packmaker.PackGlobSize.StrSize(fs)

	
	|| vm_ops = VM_Builder.Total
		fs.normal  "vm_ops",    fs <~ vm_ops
	
	|| ASM_Ops = compiler.stTotalASMOps
		fs.normal  "ASM",    (ASM_Ops*4).strsize(fs)
		fs.Normal  "Proj Saved", packmaker.PackSaved.Churn(fs)
		fs.Normal  "Lib Saved",  packmaker.LibSaved.Churn(fs)

	fs.normal  "Total Elapsed",	durr.renderdurr(fs), fs <~ "s"
	fs.normal  "Input Src",		Compiler.stTotalSourceSize.strsize(fs)
	if options.color
		fs <~ errorcolors.normal
	
	if Options.PrintMemoryUsage
		fs <~ "\n"
		app.MemoryUsage(32KB, fs)
	printline fs


function faststring.PrintStatType (|string| name, |int| count)
	if count
		self <~ '\n'
		self <~ name
		self <~ ' '
		self <~ count


function compiler.PrintStats 
	require options.argstats
	|| fs = faststring()
	fs <~ "FuncStats: "
	for i in 12
		|| c = scfunction.FuncStats[i]
			if i
				fs <~ ", "
			fs <~ i
			fs <~ ":"
			fs <~ c
	
	SCFunction.PrintStats(fs)
	printline fs


function compiler.PrintCompileErrors
	if Options.Warnings
		require stderr.HasAnything
	  else
		require StdErr.HasProblems
	stderr.PrePrintErrors
	
	|| MinSev = (ErrorSeverity.warning, ErrorSeverity.problem)(Options.Warnings)
	if Compiler.Successfulness >= 2
		MinSev = ErrorSeverity.Error
	.PrintErrors(MinSev)
	stderr.clear


function compiler.VariousSelfTests
	Jeebox.test // bug if put into compiler.run!. Wierd!
	if (options.perryoutput < 2) and !options.scripting and !app.Parent
		if options.PrintLibraries
			if (Cpp_Export.FindGlobalsCpp*12).CompressTest(false)
				"Compression: OK"
	mzlab.FreeNow


function compiler.TimeTest (|date| elapsed, |bool|)
	flow off
	//
	|| CanInstall = true
	FlowControl.DisabledIncr
	if (Options.SelfReplacement) and (Options.Variant ~= "Test") and (platform.release)
		|| ReliableTime = (64.0*1024.0*2.5)|int| // in case my date creation code has a bug... which did happen a few times
		CanInstall = elapsed < ReliableTime
		check (CanInstall) ("Not installing as compile duration was over 2.5s. Perhaps this speedie has a bug leading to excessively slow compiles?")
	FlowControl.DisabledIncr(-1)
	return CanInstall


function compiler.CompileTime 
	if !options.output_path and options.UseScriptLoc
		.ScriptLoc(compiler.originalinputpath)		
	
	if !options.scripting
		if options.SelfReplacement // avoid failing needlessly
			.FileSanityTests // sometimes this fails due to lack of permissions in xcode...
							 // xcode gives lower perms to it's builder scripts, strangely.
		.VariousSelfTests
		SC_Saver.TestSaver~quietly

	|| elapsed = .CompileAll~timeit
	.PrintCompileTime(elapsed)

	if stderr.ok
		TransCompiler.ExportAndInstall(elapsed)
		if !options.scripting and stderr.ok
			stringcorrector.CorrectStrings


