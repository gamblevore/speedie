

// must create an error if not found... unless the name is "default"


function compiler.Bundle 
	require !Compiler.IsTest and !Options.ExternalCompile
	require SC_Targets..gui
	|| Pd = .productfile
	|| Pj = .BaseProjectPath.path
	if platform.osx
		.AppleBuildApp(pd)

	
function compiler.WrongConf (CollectFunc)
	expect (!.ConfMsg) (node, "Conf already exists!") 
	error (node, "Conf must be in the index.spd file") 


function compiler.IdealName (|string|)
	|| s = .confmsg["name"]
		return s.name
	return TransCompiler.ProductBaseName.trimextandpath



function compiler.AppBuildOneLib (|file| inner, |message| lib)
	|| ldest = inner.parent.sibling("Frameworks/" + lib.name)
	if !ldest.exists
		|| dir = "/usr/local/lib/".file
		Dir[lib.name]!.hardlinkto(ldest)


function compiler.AppBuildLibs (|file| inner)
	opt norefcounts
	for lib in linkage.osxframeworks 
		if lib.expect(@str)				// ok so... hard-link it?
			.AppBuildOneLib(inner, lib)


function compiler.AppleBuildApp (|file| product)
	require platform.osx
	|| dest = product.linksto
		error (dest, "This should not be a link")
		return
	
	Compiler.stage("Create MacOSX Package")
	|| name			= .idealname
	|| prefered_name=name + ".app"
	|| prefered_app	= product.sibling(prefered_name)
	|| xcode_place	= prefered_app.sibling("Release/"+prefered_name)
	|| final_app	= (xcode_place, prefered_app)(xcode_place.fileexists)
	|| inner		= final_app["Contents/MacOS/"+name]!
	if product.moveto( inner )
		.AppBuildLibs(inner)
		.CodeSign(final_app)
		if prefered_app != final_app
			prefered_app.linkto = final_app
		options.output_path = prefered_app
		prefered_app.touch



constants
	codesign_native = "codesign_osx"

function compiler.CodeSign (|file| gui_exe)
	|| sign = prefs()[codesign_native]
		gui_exe.codesign(sign)
	  else
		errorreceiver.NewWarning( nil, "No code-signature found. (`speedie --codesign=\"details\" to save signature). Unable to sign " + gui_exe.path )
	// lets not scare users. it might a well be commented out at this point but I'd rather leave it.
	// could be useful info!
