


main // speedie main { 
	compiler.Main


function Compiler.Main
	.PreTests
	.SetupEnv
	if .EnterCompile
		.CompileTime
	.PrintResults


function Compiler.EnterCompile (|bool|)
	return  !.TryVariousStartModes  and  FeedBack.ParseArgs  and  !interact.Enter


function Compiler.PrintResults
	.PrintStats
	if !stderr.ok
		printline "Installation: " + .projects
	.PrintCompileErrors
	if interact.Perry != nil
		printline "exiting speedie " + app.id.render


function compiler.SetupEnv
	opt norefcounts

	error.AutoPrint = 1
	
	check (app.pref_path) "Conf missing prefpath"
	if app..talk and app.IsMainThread
		app.IgnoreSig
		app.CrashHandler = &process.TellParentIDied

	app.PrefsInit
	errorcolors.DisableIfNoTerminal


function compiler.PreTests
	|| s = "ZYXW"
	.pt(s, 0,  'Z')
	.pt(s, 1,  'Y')
	.pt(s, -2, 'X')
	.pt(s, -1, 'W')


function compiler.pt (|string| s, |int| i, |byte| c)
	require StdErr.ok
	if s[i] != C
		"Strings seem corrupted"


function app.IgnoreSig (|int| sig=-1)
	cpp_wrapper JB_Pipe__Ignore


api Speedie_Main (|&cstring| args, |int| Mode, |ErrorInt|)
	cpp_name Speedie_Main 
	return app.sp_run(args, mode)

