

struct FatASM
	|byte|			Op
	|byte|			Label	// 255 labels per function
							// Can we remove the label? I don't like it. It seems OK though... unused bytes.
	|uint16|		FileNum
	|uint[6]|		R	
	|uint|			BytePos
	
	operator isa (|int| m, |bool|)
		return m == .op
		
	setter Debug (|message|)
		.filenum = currfilenum
		.Bytepos = value.position
	
	function FS (|FastString| fs)
		opt norefcounts
		|| op = instruction.typelist[.op] #debug_Require
		fs <~ op.name
		fs <~ ':'
		fs <~ (' ', 5-op.name.length)
		|| GotAny = ""
		|| Remain = 25
		|| f = op.sizes
		for i in 5
			|| bs = f[i].bitsize
			if remain > 0 and bs
				fs <~ gotany
				gotany = ", "
				if f[i].isreg
					fs <~ 'r'
				fs <~ .r[i]
				remain += bs

	function Print
		visible
		if asm.NoisyASM >= 3
			printline .render
	
	render
		.fs(fs)
	
	module
		|[string]|	Resources
		|int|		CurrFileNum // 

 
 
class ÂµFunc1 (memory)
	linkage
		cpp_class ASMFunc2
		cpp_part ASMFunc2
	contains ASM

	function Visible
		visible // needed to compile strangely...
	
	function Run (|&int64| Args = nil, |int| ArgCount=nil, |int64|)
		cpp_part RunArgs
		require self
		if args
			|| r = jb_vm.vm.ClearRegisters(argcount)
			for i in argcount
				r[i] = args[i] 
		
		return jb_vm.Run(.ptr, .length)

