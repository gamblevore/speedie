#!/usr/local/bin/spd

main {


|| Speedie = "~/Speedie" // change this later
|| CFlags = "-std=gnu++17 -stdlib=libc++ -m64 -L/usr/local/lib/ -I /usr/local/include -I $Speedie/Library/CppLib -w -Wno-return-type-c-linkage -lc++ -Os -flto -mtune=native"
|| LibFlags = "$CFlags -dynamiclib  -F/Library/Frameworks  -D TARGET_UNIX=1 -D AS_LIBRARY=1 -D __SPEEDIE__=1"
|| ExecFlags = "$CFlags -g -ljeebox"


////////////////////////////
<(`    (((generating cpp files)))    `)>
////////////////////////////

app.cwd = Speedie.child("jeebox.scproj").resolve
"spd".execute([".", "-x", "--quiet", "--nocompile"])


////////////////////////////
<(`    (((generating script)))    `)>
////////////////////////////


|| script = "
#!/bin/bash
set -e

cd $Speedie/Library/CppLib

clang -o /usr/local/lib/libjeebox.dylib  $LibFlags   JB_File.cpp JB_ObjArray.cpp JB_MSR.cpp JB_LibraryFile.cpp JB_List.cpp JB_FastString.cpp JB_Dictionary.cpp JB_Child.cpp JB_Saveable.cpp JB_Compress.cpp JB_String.cpp JB_Utils.cpp JB_Main.cpp JB_Pipe.cpp JB_Run.cpp JB_Vectors.cpp JB_ByteMap.cpp JB_RingTree.cpp JB_PNG.cpp JB_Date.cpp JB_Errors.cpp JB_DirReaderUnix.cpp JB_Math.cpp JB_DirReaderWin32.cpp JB_BasicIO.cpp JB_Alloc.cpp JB_Tokeniser.cpp   $Speedie/jeebox.scproj/Cpp/JB.cpp   $Speedie/jeebox.scproj/Cpp/JB_Globals.cpp

cd $Speedie/jeebox.scproj/Examples
cp *.h /usr/local/include/

clang -o Build/jb  $ExecFlags  jb.cpp
clang -o Build/xml  $ExecFlags  xml.cpp
clang -o Build/test  $ExecFlags  test.cpp
clang -o Build/users  $ExecFlags  users.cpp

$Speedie/jeebox.scproj/Examples/Build/jb
"

|| out = "BuildJBLib.sh"
out.filedata = script
if StdErr.ok
	"Script generated at: ${out.resolve}"

if app["exec"]
	"Running Script: $out"
	script.Execute

}